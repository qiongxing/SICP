(load "./di-er-zhang/2.28.scm")
(define (make-mobile left right)
    (list left right)
)
(define (make-branch length structure)
    (list length structure)
)
(define (left-branch lst)
    (car lst)    
)
(define (right-branch lst)
    (cadr lst)    
)
(define (branch-length branch)
    (car branch))

(define (branch-structure branch)
    (cadr branch))
(define (total-weight lst)
    (define (total lst result)
        (cond 
            ((null? lst) result)
            (else (total (cdr lst) (+ (car lst) result)))
        )    
    )
    (total (fringe lst) 0)
)
(define x (list (list 1 3) (list 5 9)))
; (display (left-branch x))
; (display (total-weight x))