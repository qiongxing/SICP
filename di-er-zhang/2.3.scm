(load "./di-er-zhang/2.2.scm")
(define (length-of-rect rect)
    (abs (- (x-point (uleft-point rect))
            (x-point (bright-point rect))
         )
    )
)
(define (width-of-rect rect)
    (abs (- (y-point (uleft-point rect))
            (y-point (bright-point rect))
         )
    )
)
(define (premider-rect r)
    (let ((length (length-of-rect r))
            (width (width-of-rect r))
         )
        (* 2 (+ length width))
    )    
)
(define (area-rect r)
    (let ((length (length-of-rect r))
            (width (width-of-rect r))
         )
        (* length width)
    )    
)

(define (mark-rect uleft-point bright-point)
    (cons uleft-point bright-point)
)
(define (mark-point x y)
    (cons x y)
)
(define (uleft-point rect)
    (car rect)
)
(define (bright-point rect)
    (cdr rect)
)
(define uleft-p (mark-point 3 7))
(define bright-p (mark-point 10 2))
(define rect1 (mark-rect uleft-p bright-p) )
(define (print-area area)
    (newline)
    (display "area:")
    (display (area-rect area))
    (newline)
    (display "premider:")
    (display (premider-rect area))
)
(display (print-area rect1))